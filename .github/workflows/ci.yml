name: aiida-optimade

on: [push, pull_request]

jobs:

  pre-commit:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools
        pip install pre-commit

    - name: Test with pre-commit
      run: |
        pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

  pytest:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8]
        backend: ['django', 'sqlalchemy']

    steps:
    - uses: actions/checkout@v1
    - uses: harmon758/postgresql-action@v1
      with:
        postgresql version: '11'
        postgresql db: test_${{ matrix.backend }}
        postgresql user: 'postgres'
        postgresql password: ''

    - name: Set up Python ${{ matrix.python-version}}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install system dependencies
      run: |
        wget -O - "https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc" | sudo apt-key add -
        echo 'deb https://dl.bintray.com/rabbitmq-erlang/debian bionic erlang' | sudo tee -a /etc/apt/sources.list.d/bintray.rabbitmq.list
        echo 'deb https://dl.bintray.com/rabbitmq/debian bionic main' | sudo tee -a /etc/apt/sources.list.d/bintray.rabbitmq.list
        sudo apt update
        sudo apt install postgresql postgresql-server-dev-all postgresql-client rabbitmq-server graphviz
        sudo systemctl status rabbitmq-server.service

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools
        # Install optimade-python-tools from github
        cd ${GITHUB_WORKSPACE}/..
        git clone https://github.com/Materials-Consortia/optimade-python-tools
        pip install -e optimade-python-tools
        cd ${GITHUB_WORKSPACE}
        pip install -e .[dev]
        reentry scan

    - name: Setup up environment for AiiDA
      env:
        AIIDA_TEST_BACKEND: ${{ matrix.backend }}
      run: |
        .github/workflows/setup_aiida.sh

    - name: Load test data
      run: |
        verdi import --migration --non-interactive .github/aiida/optimade.aiida

    - name: Test with pytest
      env:
        AIIDA_PROFILE: test_${{ matrix.backend }}
      run: |
        pytest --cov=./ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        xml: ./coverage.xml
        flags: unittests
        yml: ./.codecov.yml
