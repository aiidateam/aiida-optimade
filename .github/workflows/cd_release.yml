---
name: CD - Publish

on:
    release:
        types:
            - published

env:
    PUBLISH_UPDATE_BRANCH: develop
    GIT_USER_NAME: The AiiDA Team
    GIT_USER_EMAIL: developers@aiida.net

jobs:
    publish:
        name: Update CHANGELOG
        if: github.repository == 'aiidateam/aiida-optimade' && startsWith(github.ref, 'refs/tags/v')
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up Python 3.8
              uses: actions/setup-python@v4
              with:
                  python-version: 3.8

            - name: Install Python dependencies
              run: |
                  python -m pip install -U pip
                  pip install -U setuptools wheel flit
                  pip install -U -e .[dev]

            - name: Update changelog
              uses: CharMixer/auto-changelog-action@v1
              with:
                  token: ${{ secrets.RELEASE_PAT }}
                  release_branch: ${{ env.PUBLISH_UPDATE_BRANCH }}

            - name: Update version - Commit changes and update tag
              run: .github/utils/update_version.sh

            - name: Update '${{ env.PUBLISH_UPDATE_BRANCH }}'
              uses: CasperWA/push-protected@v2
              with:
                  token: ${{ secrets.RELEASE_PAT }}
                  branch: ${{ env.PUBLISH_UPDATE_BRANCH }}
                  sleep: 15
                  force: true
                  tags: true

            - name: Get tagged versions
              run: echo "PREVIOUS_VERSION=$(git tag -l --sort -version:refname | sed -n 2p)" >> $GITHUB_ENV

            - name: Create release-specific changelog
              uses: CharMixer/auto-changelog-action@v1
              with:
                  token: ${{ secrets.RELEASE_PAT }}
                  release_branch: ${{ env.PUBLISH_UPDATE_BRANCH }}
                  since_tag: ${{ env.PREVIOUS_VERSION }}
                  output: release_changelog.md

            - name: Append changelog to release body
              run: |
                  gh api /repos/${{ github.repository }}/releases/${{ github.event.release.id }} --jq '.body' > release_body.md
                  cat release_changelog.md >> release_body.md
                  gh api /repos/${{ github.repository }}/releases/${{ github.event.release.id }} -X PATCH -F body='@release_body.md'
              env:
                  GITHUB_TOKEN: ${{ secrets.RELEASE_PAT }}

            - name: Build source distribution
              run: flit build

            - name: Publish package to TestPyPI
              uses: pypa/gh-action-pypi-publish@master
              with:
                  user: __token__
                  password: ${{ secrets.test_pypi_password }}
                  repository_url: https://test.pypi.org/legacy/

            - name: Publish package to PyPI
              uses: pypa/gh-action-pypi-publish@master
              with:
                  user: __token__
                  password: ${{ secrets.pypi_password }}

    update-stable:
        name: Update `stable` branch
        needs: publish
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
                  ref: stable
                  persist-credentials: false

            - name: Setup git config
              run: |
                  git config --global user.name "${GIT_USER_NAME}"
                  git config --global user.email "${GIT_USER_EMAIL}"

            - name: Make `stable` branch equal to `${{ env.PUBLISH_UPDATE_BRANCH }}` branch
              run: git merge --ff-only origin/${{ env.PUBLISH_UPDATE_BRANCH }}

            - name: Update `stable` branch
              uses: ad-m/github-push-action@master
              with:
                  github_token: ${{ secrets.RELEASE_PAT }}
                  branch: stable
