---
name: CD - Publish

on:
  release:
    types:
    - published

env:
  PUBLISH_UPDATE_BRANCH: develop
  GIT_USER_NAME: The AiiDA Team
  GIT_USER_EMAIL: developers@aiida.net

jobs:
  publish:
    name: External
    uses: SINTEF/ci-cd/.github/workflows/cd_release.yml@v1
    if: github.repository == 'aiidateam/aiida-optimade' && startsWith(github.ref, 'refs/tags/v')
    with:
      git_username: ${{ env.GIT_USER_NAME }}
      git_email: ${{ env.GIT_USER_EMAIL }}
      release_branch: ${{ env.PUBLISH_UPDATE_BRANCH }}
      package_dirs: aiida_optimade
      python_version_build: '3.8'
      version_update_changes_separator: ;
      version_update_changes: |
        {package_dir}/__init__.py;__version__ = .+;__version__ = \"{version}\"
        {package_dir}/config.json;\"version\": ([^,]+),;\"version\": \"{version}\",
        tests/static/test_config.json;\"version\": ([^,]+),;\"version\": \"{version}\",
        tests/static/test_mongo_config.json;\"version\": ([^,]+),;\"version\": \"{version}\",
        .github/mongo/ci_config.json;\"version\": ([^,]+),;\"version\": \"{version}\",
      build_cmd: pip install -U flit && flit build
    secrets:
      PyPI_token: ${{ secrets.test_pypi_password }}
      PAT: ${{ secrets.RELEASE_PAT }}

  update-stable:
    name: Update `stable` branch
    needs: publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: stable
        persist-credentials: false

    - name: Setup git config
      run: |
        git config --global user.name "${GIT_USER_NAME}"
        git config --global user.email "${GIT_USER_EMAIL}"

    - name: Make `stable` branch equal to `${{ env.PUBLISH_UPDATE_BRANCH }}` branch
      run: git merge --ff-only origin/${{ env.PUBLISH_UPDATE_BRANCH }}

    - name: Update `stable` branch
      uses: CasperWA/push-protected@v2
      with:
        token: ${{ secrets.RELEASE_PAT }}
        branch: stable
